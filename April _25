package April_25;

public class KthElementFromLast {
    static Node head;
    public static void main(String[] args) {
        for (int i=25;i>=5;i-=5){
            addFirst(i);
        }
        display();
        findKthFromLast(2);
    }
    public static void addFirst(int data){

        Node newNode = new Node(data);
        if (head == null){
            head = newNode;
        }
        else {
            newNode.next = head;
            head = newNode;
        }
    }
    public static void display(){
        if (head==null){
            System.out.println("List is empty! ");
        }
        else {
            Node cur = head;
            while (cur!=null){
                System.out.print(cur.data+" ");
                cur = cur.next;
            }
            System.out.println();
        }
    }
    public static void findKthFromLast(int k) {
        if (head == null || head.next == null) {
            System.out.println("List is empty");
        } else {  // Two traversal by calculating length
            int length = 0;
            Node currNode = head;
            Node nextNode = head;
            while (currNode != null) {
                length++;
                currNode = currNode.next;
            }
            if (k > length) {
                System.out.println(-1);
            } else {
                length = length - k;
                for (int i = 0; i < length; i++) {
                    nextNode = nextNode.next;
                }
            }
            System.out.println("The "+k+" Node from last is "+nextNode.data);
        }

        // Two Pointer approach one traversal
//        else{
//            Node currNode = head;
//            Node nextNode = head;
//            for (int i=0;i<k;i++){
//                nextNode = nextNode.next;
//            }
//            while (nextNode!=null){
//                currNode = currNode.next;
//                nextNode = nextNode.next;
//            }
//            System.out.println(currNode.data);
//        }
    }
}

///////////////////// Node Classs //////////////////////
public class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;

    }
}

